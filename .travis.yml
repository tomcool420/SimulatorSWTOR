dist: bionic
sudo: required
language:
  - cpp
addons:
  apt:
    sources:
      - ubuntu-toolchain-r-test
    packages:
      - gcc-8
      - g++-8
      - cmake
      - python3
      - ninja-build
      - python3-venv
      - python3-pip
      - lcov
      - python3-setuptools
      - python3-wheel

jobs:
  include:
    - os: linux
      dist: bionic
      compiler: gcc
      env: CMAKE_BUILD_TYPE=RelWithDebInfo
      script:
        - sudo ln -s /usr/bin/gcc-8 /usr/local/bin/gcc
        - sudo ln -s /usr/bin/g++-8 /usr/local/bin/g++
        - export CC=/usr/bin/gcc-8
        - export CXX=/usr/bin/g++-8
        # Check versions of gcc, g++ and cmake
        - gcc -v && g++ -v && cmake --version
        - mkdir build && cd build
        - cmake .. -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo
        - ninja -k 100 all
        - ctest --output-on-failure=1
    - os: linux
      dist: bionic
      compiler: gcc
      env: CMAKE_BUILD_TYPE=Debug
      script:
        - pip3 install --user cpp-coveralls
        - export PATH=/usr/local/bin/:$PATH
        - sudo ln -s /usr/bin/gcc-8 /usr/local/bin/gcc
        - sudo ln -s /usr/bin/g++-8 /usr/local/bin/g++
        - sudo ln -s /usr/bin/gcov /usr/local/bin/gcov
        - export CC=/usr/bin/gcc-8
        - export CXX=/usr/bin/g++-8
        # Check versions of gcc, g++ and cmake
        - gcc -v && g++ -v && cmake --version
        - mkdir build && cd build
        - cmake .. -G Ninja  -DCOVERAGE=ON -DCMAKE_BUILD_TYPE=Debug
        - ninja -k 100 all
      after_succes:
        - ctest 
        - cd ..
        - ~/.local/bin/coveralls -b build -E ".conan" -E "/usr/" -E "/test/" -E "/build/" -E "Simulator/Simulator" -t djkKTaIgaDaxnk4mB9eS9wGknnuqC4lwu
    - os: osx
      osx_image: xcode11.6
      compiler: clang
      script:
        - mkdir build && cd build
        - cmake .. -G Xcode -DCMAKE_BUILD_TYPE=RelWithDebInfo 
        - cmake --build . --target ALL_BUILD --config RelWithDebInfo
        - ctest --output-on-failure=1

    # - os: windows
    #   script:
    #     - choco install ninja
    #     - choco install python3 --pre 
    #     - mkdir build
    #     - cd build
    #     - cmake .. -G Ninja -DCMAKE_BUILD_TYPE=RelWithDebInfo 
    #     - ninja -k 100 all
    #   cache:
    #     directories:
    #       - $HOME/AppData/Local/Temp/chocolatey
    #       - $HOME/.conan
cache:
  directories:
    - $HOME/.conan
